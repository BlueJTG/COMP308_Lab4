[{"C:\\Users\\jsrg4\\Documents\\GitHub\\COMP308_Lab4\\react-ui\\src\\index.js":"1","C:\\Users\\jsrg4\\Documents\\GitHub\\COMP308_Lab4\\react-ui\\src\\reportWebVitals.js":"2","C:\\Users\\jsrg4\\Documents\\GitHub\\COMP308_Lab4\\react-ui\\src\\App.js":"3","C:\\Users\\jsrg4\\Documents\\GitHub\\COMP308_Lab4\\react-ui\\src\\components\\Results.js":"4","C:\\Users\\jsrg4\\Documents\\GitHub\\COMP308_Lab4\\react-ui\\src\\components\\DisplayForm.js":"5"},{"size":517,"mtime":1618002882336,"results":"6","hashOfConfig":"7"},{"size":375,"mtime":1618002882337,"results":"8","hashOfConfig":"7"},{"size":624,"mtime":1618002882334,"results":"9","hashOfConfig":"7"},{"size":2176,"mtime":1618012288960,"results":"10","hashOfConfig":"7"},{"size":8023,"mtime":1618006873757,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1qhs3n4",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"14"},"C:\\Users\\jsrg4\\Documents\\GitHub\\COMP308_Lab4\\react-ui\\src\\index.js",[],["25","26"],"C:\\Users\\jsrg4\\Documents\\GitHub\\COMP308_Lab4\\react-ui\\src\\reportWebVitals.js",[],"C:\\Users\\jsrg4\\Documents\\GitHub\\COMP308_Lab4\\react-ui\\src\\App.js",["27","28","29","30"],"import React, { useState, useEffect } from 'react';\r\nimport {\r\n  BrowserRouter, Route, Switch\r\n} from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport DisplayForm from \"./components/DisplayForm\";\r\nimport Results from \"./components/Results\";\r\nimport './App.css';\r\n//\r\nfunction App() {\r\n  return(\r\n    <BrowserRouter>\r\n    <div className=\"container\">\r\n      <Switch>\r\n        <Route component={DisplayForm} path=\"/\" exact={true} />\r\n        <Route component={Results} path=\"/results\" />\r\n      </Switch>\r\n    </div>\r\n  </BrowserRouter>\r\n  );\r\n}\r\n//\r\nexport default App;\r\n","C:\\Users\\jsrg4\\Documents\\GitHub\\COMP308_Lab4\\react-ui\\src\\components\\Results.js",[],"C:\\Users\\jsrg4\\Documents\\GitHub\\COMP308_Lab4\\react-ui\\src\\components\\DisplayForm.js",["31","32","33"],"import axios from \"axios\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\r\nimport Container from \"react-bootstrap/Container\"\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport React, { useState } from \"react\";\r\n\r\nfunction PredictionForm(props){\r\n    const [state, submitIris] = useState({\r\n        epochNum: \"\",\r\n        learningRate: \"\",\r\n        sepal_length: \"\",\r\n        sepal_width: \"\",\r\n        petal_length: \"\",\r\n        petal_width: \"\",\r\n        species: \"\"\r\n    });\r\n    const [showLoading, setShowLoading] = useState(true);\r\n    const apiUrl = \"http://localhost:3000/results\";\r\n\r\n    // define \r\n    const checkGuess = (resultData, userGuess) => {\r\n        let val1 = resultData[0];\r\n        let val2 = resultData[1];\r\n        let val3 = resultData[2];\r\n        let final = Math.max(val1, Math.max(val2, val3));\r\n        let name = \"\";\r\n\r\n        if (final === val1) {\r\n            name = \"Setosa\";\r\n        } else if (final === val2) {\r\n            name = \"Virginica\";\r\n        } else if (final === val3) {\r\n            name = \"Versicolor\";\r\n        }\r\n\r\n        // return message according to the guess\r\n        if (userGuess.toUpperCase() === name.toUpperCase()) {\r\n            return `Your guess ${name} is same as mine!`;\r\n        } else {\r\n            return (\r\n                `You guessed ${userGuess[0].toUpperCase() + userGuess.slice(1)}` +\r\n                `, but I think it's ${name}. You should study more!`\r\n            );\r\n        }\r\n    }\r\n\r\n    const submitForm = e =>{\r\n        setShowLoading(true);\r\n        e.preventDefault();\r\n        axios\r\n        .post(apiUrl)\r\n        .then(state)\r\n        setShowLoading(false);\r\n        props.history.push({pathname: \"/results\", state})\r\n        ;\r\n    };\r\n\r\n    const onChange = e => {\r\n        e.persist();\r\n        submitIris({ ...state, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n      <Container>\r\n        <div className=\"text-center\">\r\n          <div\r\n            style={{\r\n              top: \"3vw\",\r\n              left: \"10\",\r\n              paddingLeft: \"2vw\",\r\n              width: \"50vw\",\r\n              height: \"auto\",\r\n            }}\r\n          >\r\n            <h1>SPECIES PREDICTION FORM</h1>\r\n            {showLoading && (\r\n              <Spinner animation=\"border\" role=\"status\"></Spinner>\r\n            )}\r\n            <Form onSubmit={submitForm} action=\"/run\" method=\"post\">\r\n                <Form.Group>\r\n                <Form.Label>Epoch Number: </Form.Label> \r\n                <Form.Control\r\n                  style={{\r\n                    width: \"100%\",\r\n                    padding: \"10px 15px\",\r\n                    margin: \"8px 0\",\r\n                    display: \"inline-block\",\r\n                    borderRadius: \"4px\",\r\n                    boxSizing: \"border-box\",\r\n                  }}\r\n                  type=\"number\"\r\n                  step=\"any\"\r\n                  name=\"epochNum\"\r\n                  id=\"epochNum\"\r\n                  placeholder=\"i.e. 100\"\r\n                  value={state.epochNum}\r\n                  onChange={onChange}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n              <br></br>\r\n              <Form.Group class=\"form-group form-inline\">\r\n              <Form.Label>Learning Rate: </Form.Label>\r\n                <Form.Control\r\n                  style={{\r\n                    width: \"100%\",\r\n                    padding: \"10px 15px\",\r\n                    margin: \"8px 0\",\r\n                    display: \"inline-block\",\r\n                    borderRadius: \"4px\",\r\n                    boxSizing: \"border-box\",\r\n                  }}\r\n                  type=\"number\"\r\n                  step=\".01\"\r\n                  name=\"learningRate\"\r\n                  id=\"learningRate\"\r\n                  min=\"0\"\r\n                  max=\"1\"\r\n                  placeholder=\"i.e. 0.05\"\r\n                  value={state.learningRate}\r\n                  onChange={onChange}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n              <br></br>\r\n              <Form.Group class=\"form-group form-inline\">\r\n              <Form.Label>Sepal Length: </Form.Label>\r\n                <Form.Control\r\n                  style={{\r\n                    width: \"100%\",\r\n                    padding: \"10px 15px\",\r\n                    margin: \"8px 0\",\r\n                    display: \"inline-block\",\r\n                    borderRadius: \"4px\",\r\n                    boxSizing: \"border-box\",\r\n                  }}\r\n                  type=\"number\"\r\n                  step=\".1\"\r\n                  name=\"sepal_length\"\r\n                  id=\"sepal_length\"\r\n                  placeholder=\"i.e. 3.9\"\r\n                  value={state.sepal_length}\r\n                  onChange={onChange}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n              <br></br>\r\n              <Form.Group class=\"form-group form-inline\">\r\n              <Form.Label>Sepal Width: </Form.Label>\r\n                <Form.Control\r\n                  style={{\r\n                    width: \"100%\",\r\n                    padding: \"10px 15px\",\r\n                    margin: \"8px 0\",\r\n                    display: \"inline-block\",\r\n                    borderRadius: \"4px\",\r\n                    boxSizing: \"border-box\",\r\n                  }}\r\n                  type=\"number\"\r\n                  step=\".1\"\r\n                  name=\"sepal_width\"\r\n                  id=\"sepal_width\"\r\n                  placeholder=\"i.e. 4.1\"\r\n                  value={state.sepal_width}\r\n                  onChange={onChange}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n              <br></br>\r\n              <Form.Group>\r\n                  <Form.Label>Petal Length: \r\n                  </Form.Label>\r\n                <Form.Control\r\n                  style={{\r\n                    width: \"100%\",\r\n                    padding: \"10px 15px\",\r\n                    margin: \"8px 0\",\r\n                    display: \"inline-block\",\r\n                    borderRadius: \"4px\",\r\n                    boxSizing: \"border-box\",\r\n                  }}\r\n                  type=\"number\"\r\n                  step=\".1\"\r\n                  name=\"petal_length\"\r\n                  id=\"petal_length\"\r\n                  placeholder=\"i.e. 3.9\"\r\n                  value={state.petal_length}\r\n                  onChange={onChange}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n              <br></br>\r\n              <Form.Group>\r\n               <Form.Label>Petal Width: </Form.Label> \r\n               <Form.Control\r\n                  style={{\r\n                    width: \"100%\",\r\n                    padding: \"10px 15px\",\r\n                    margin: \"8px 0\",\r\n                    borderRadius: \"4px\",\r\n                    boxSizing: \"border-box\",\r\n                  }}\r\n                  type=\"number\"\r\n                  step=\".1\"\r\n                  name=\"petal_width\"\r\n                  id=\"petal_width\"\r\n                  placeholder=\"i.e. 3.9\"\r\n                  value={state.petal_width}\r\n                  onChange={onChange}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n              <br></br>\r\n              <Button \r\n                style={{\r\n                  background: \"white\",\r\n                  color: \"black\",\r\n                  padding: \"15px 32px\",\r\n                  textAlign: \"center\",\r\n                  textDecoration: \"none\",\r\n                  display: \"inline-block\",\r\n                  fontSize: \"15px\",\r\n                  fontWeight: \"bold\"\r\n                }}\r\n                className=\"text-center\"\r\n                variant=\"primary\"\r\n                type=\"submit\">\r\n                Predict\r\n              </Button>\r\n            </Form>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n      </div>\r\n    );\r\n}\r\nexport default PredictionForm;",{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":1,"column":17,"nodeType":"40","messageId":"41","endLine":1,"endColumn":25},{"ruleId":"38","severity":1,"message":"42","line":1,"column":27,"nodeType":"40","messageId":"41","endLine":1,"endColumn":36},{"ruleId":"38","severity":1,"message":"43","line":5,"column":8,"nodeType":"40","messageId":"41","endLine":5,"endColumn":13},{"ruleId":"38","severity":1,"message":"44","line":6,"column":8,"nodeType":"40","messageId":"41","endLine":6,"endColumn":15},{"ruleId":"38","severity":1,"message":"45","line":3,"column":8,"nodeType":"40","messageId":"41","endLine":3,"endColumn":17},{"ruleId":"38","severity":1,"message":"46","line":7,"column":10,"nodeType":"40","messageId":"41","endLine":7,"endColumn":20},{"ruleId":"38","severity":1,"message":"47","line":24,"column":11,"nodeType":"40","messageId":"41","endLine":24,"endColumn":21},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'axios' is defined but never used.","'Spinner' is defined but never used.","'Jumbotron' is defined but never used.","'withRouter' is defined but never used.","'checkGuess' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]