{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\timho\\\\Desktop\\\\TimothyGarcia_JesseGabriel_COMP308_Lab4\\\\react-ui\\\\src\\\\components\\\\Results.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Button, ListGroupItem, Spinner } from 'react-bootstrap';\nimport { NavLink } from \"react-router-dom\";\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App(props) {\n  _s();\n\n  const [data, setData] = useState({});\n  const [showLoading, setShowLoading] = useState(true);\n  const apiUrl = \"http://localhost:3000/run\";\n  const dataFrom = {\n    learningRate: parseFloat(props.location.state.learningRate),\n    epochNum: parseInt(props.location.state.epochNum),\n    sepal_length: parseFloat(props.location.state.sepal_length),\n    sepal_width: parseFloat(props.location.state.sepal_width),\n    petal_length: parseFloat(props.location.state.petal_length),\n    petal_width: parseFloat(props.location.state.petal_width),\n    species: props.location.state.species\n  };\n\n  const checkGuess = (resultData, userGuess) => {\n    let val1 = resultData[0];\n    let val2 = resultData[1];\n    let val3 = resultData[2];\n    let final = Math.max(val1, Math.max(val2, val3));\n    let name = \"\";\n\n    if (final == val1) {\n      name = \"Setosa\";\n    } else if (final == val2) {\n      name = \"Virginica\";\n    } else if (final == val3) {\n      name = \"Versicolor\";\n    }\n\n    dataFrom({\n      species: name\n    }); // return message according to the guess\n\n    if (userGuess.toUpperCase() === name.toUpperCase()) {\n      return `Your guess ${name} is same as mine!`;\n    } else {\n      return `You guessed ${userGuess[0].toUpperCase() + userGuess.slice(1)}` + `, but I think it's ${name}. You should study more!`;\n    }\n  }; //runs once after the first rendering of page\n\n\n  useEffect(() => {\n    const fetchData = async () => {\n      axios.post(apiUrl, dataFrom).then(result => {\n        console.log('result.data:', result.data);\n        setData(result.data);\n        setShowLoading(false);\n      }).catch(error => {\n        console.log('error in fetchData:', error);\n      });\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: showLoading === false ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [showLoading && /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          classname: \"sr-only\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Prediction Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Results: \", dataFrom.species]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"Results-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Learning Rate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Epoch Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Setosa\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Virginica\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Versicolor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"App-td\",\n              children: dataFrom.learningRate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"App-td\",\n              children: dataFrom.epochNum\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"App-td\",\n              children: data.row1.map((value, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n                children: value\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n        style: {\n          textDecoration: \"none\"\n        },\n        to: \"/\",\n        activeClassName: \"active\",\n        children: \"BACK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: showLoading && /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sr-only\",\n          children: \"Waiting for results...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"Lz1ug0+UnHfZ/mSBv3Fk4g0s4v0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["c:/Users/timho/Desktop/TimothyGarcia_JesseGabriel_COMP308_Lab4/react-ui/src/components/Results.js"],"names":["React","useState","useEffect","axios","Button","ListGroupItem","Spinner","NavLink","App","props","data","setData","showLoading","setShowLoading","apiUrl","dataFrom","learningRate","parseFloat","location","state","epochNum","parseInt","sepal_length","sepal_width","petal_length","petal_width","species","checkGuess","resultData","userGuess","val1","val2","val3","final","Math","max","name","toUpperCase","slice","fetchData","post","then","result","console","log","catch","error","row1","map","value","index","textDecoration"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport {Button, ListGroupItem, Spinner} from 'react-bootstrap';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport './styles.css';\r\n\r\nfunction App(props){\r\n  const [data, setData] = useState({});\r\n  const [showLoading, setShowLoading] = useState(true);\r\n  const apiUrl = \"http://localhost:3000/run\";\r\n  const dataFrom = {\r\n    learningRate: parseFloat(props.location.state.learningRate),\r\n    epochNum: parseInt(props.location.state.epochNum),\r\n    sepal_length: parseFloat(props.location.state.sepal_length),\r\n    sepal_width: parseFloat(props.location.state.sepal_width),\r\n    petal_length: parseFloat(props.location.state.petal_length),\r\n    petal_width: parseFloat(props.location.state.petal_width),\r\n    species: (props.location.state.species),\r\n  };\r\n  const checkGuess = (resultData, userGuess) => {\r\n    let val1 = resultData[0];\r\n    let val2 = resultData[1];\r\n    let val3 = resultData[2];\r\n    let final = Math.max(val1, Math.max(val2, val3));\r\n    let name = \"\";\r\n\r\n    if (final == val1) {\r\n        name = \"Setosa\";\r\n    } else if (final == val2) {\r\n        name = \"Virginica\";\r\n    } else if (final == val3) {\r\n        name = \"Versicolor\";\r\n    }\r\n    dataFrom({species: name});\r\n\r\n    // return message according to the guess\r\n    if (userGuess.toUpperCase() === name.toUpperCase()) {\r\n        return `Your guess ${name} is same as mine!`;\r\n    } else {\r\n        return (\r\n            `You guessed ${userGuess[0].toUpperCase() + userGuess.slice(1)}` +\r\n            `, but I think it's ${name}. You should study more!`\r\n        );\r\n    }\r\n  }\r\n\r\n  //runs once after the first rendering of page\r\n  useEffect(() => {\r\n    \r\n    const fetchData = async () => {\r\n    axios\r\n    .post(apiUrl, dataFrom)\r\n    .then(result => {\r\n      console.log('result.data:' , result.data)\r\n      setData(result.data)\r\n      setShowLoading(false)\r\n    }).catch((error) => {\r\n      console.log('error in fetchData:', error)\r\n    });\r\n  };\r\n  fetchData();\r\n}, []);\r\n\r\nreturn(\r\n  <div>\r\n    { showLoading === false\r\n    ? <div>\r\n        {showLoading && <Spinner animation=\"border\" role=\"status\">\r\n          <span classname=\"sr-only\">Loading...</span>\r\n          </Spinner>}\r\n          \r\n          <h1>Prediction Results</h1>\r\n          <br></br>\r\n          <h2>Results: {dataFrom.species}</h2>\r\n          <table className=\"Results-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Learning Rate</th>\r\n              <th>Epoch Number</th>\r\n              <th>Setosa</th>\r\n              <th>Virginica</th>\r\n              <th>Versicolor</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td className=\"App-td\">\r\n                {dataFrom.learningRate}\r\n              </td>\r\n              <td className=\"App-td\">\r\n              {dataFrom.epochNum}\r\n              </td>\r\n              </tr>\r\n              <tr>\r\n              <td className=\"App-td\">\r\n                {data.row1.map((value, index) =>(\r\n                    <p key={index}>{value}</p>\r\n                ))}\r\n              </td>\r\n              </tr>\r\n          </tbody>\r\n          </table>\r\n          <br></br>\r\n          \r\n            <NavLink\r\n            style={{ textDecoration: \"none\" }}\r\n            to=\"/\"\r\n            activeClassName=\"active\"\r\n            >BACK\r\n            </NavLink>\r\n  </div>\r\n  :\r\n  <div>\r\n    {showLoading && <Spinner animation=\"border\" role=\"status\">\r\n      <span className=\"sr-only\">Waiting for results...</span>\r\n      </Spinner>}\r\n  </div>\r\n\r\n}\r\n</div>\r\n);\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}