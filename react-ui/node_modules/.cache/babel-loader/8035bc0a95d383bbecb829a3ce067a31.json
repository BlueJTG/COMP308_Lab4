{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\timho\\\\Desktop\\\\Centennial College\\\\Winter 2021\\\\COMP 308-006 - Emerging Technologies\\\\Assignments\\\\Assignment 4\\\\TimothyGarcia_JesseGabriel_COMP308_Lab4\\\\react-ui\\\\src\\\\components\\\\DisplayForm.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Container from \"react-bootstrap/Container\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { withRouter } from \"react-router-dom\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PredictionForm(props) {\n  _s();\n\n  const [state, submitIris] = useState({\n    epochNum: \"\",\n    learningRate: \"\",\n    sepalLength: \"\",\n    sepalWidth: \"\",\n    petalLength: \"\",\n    petalWidth: \"\",\n    species: \"\"\n  });\n  const [showLoading, setShowLoading] = useState(false);\n  const apiUrl = \"http://localhost:3000/\"; // define \n\n  const checkGuess = (resultData, userGuess) => {\n    let val1 = resultData[0];\n    let val2 = resultData[1];\n    let val3 = resultData[2];\n    let final = Math.max(val1, Math.max(val2, val3));\n    let name = \"\";\n\n    if (final == val1) {\n      name = \"Setosa\";\n    } else if (final == val2) {\n      name = \"Virginica\";\n    } else if (final == val3) {\n      name = \"Versicolor\";\n    } // return message according to the guess\n\n\n    if (userGuess.toUpperCase() === name.toUpperCase()) {\n      return `Your guess ${name} is same as mine!`;\n    } else {\n      return `You guessed ${userGuess[0].toUpperCase() + userGuess.slice(1)}` + `, but I think it's ${name}. You should study more!`;\n    }\n  };\n\n  const submitForm = e => {\n    setShowLoading(true);\n    e.preventDefault();\n    axios.post(apiUrl).then(state);\n    setShowLoading(false);\n    props.history.push({\n      pathname: \"/results\",\n      state\n    }).catch(error => setShowLoading(false));\n  };\n\n  const onChange = e => {\n    e.persist();\n    submitIris({ ...state,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: \"absolute\",\n            top: \"3vw\",\n            bottom: \"0\",\n            left: \"0\",\n            right: \"0\",\n            margin: \"auto\",\n            width: \"30vw\",\n            height: \"auto\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"TEST PARAMETERS FORM\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), showLoading && /*#__PURE__*/_jsxDEV(Spinner, {\n            animation: \"border\",\n            role: \"status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: submitForm,\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                style: {\n                  width: \"100%\",\n                  padding: \"12px 20px\",\n                  margin: \"8px 0\",\n                  display: \"inline-block\",\n                  border: \"1px solid #ccc\",\n                  borderRadius: \"4px\",\n                  boxSizing: \"border-box\"\n                },\n                type: \"number\",\n                step: \".1\",\n                name: \"sepalLength\",\n                id: \"sepalLength\",\n                placeholder: \"Enter Sepal Length\",\n                value: state.sepalLength,\n                onChange: onChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                style: {\n                  width: \"100%\",\n                  padding: \"12px 20px\",\n                  margin: \"8px 0\",\n                  display: \"inline-block\",\n                  border: \"1px solid #ccc\",\n                  borderRadius: \"4px\",\n                  boxSizing: \"border-box\"\n                },\n                type: \"number\",\n                step: \".1\",\n                name: \"sepalWidth\",\n                id: \"sepalWidth\",\n                placeholder: \"Enter Sepal Width\",\n                value: state.sepalWidth,\n                onChange: onChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                style: {\n                  width: \"100%\",\n                  padding: \"12px 20px\",\n                  margin: \"8px 0\",\n                  display: \"inline-block\",\n                  border: \"1px solid #ccc\",\n                  borderRadius: \"4px\",\n                  boxSizing: \"border-box\"\n                },\n                type: \"number\",\n                step: \".1\",\n                name: \"petalLength\",\n                id: \"petalLength\",\n                placeholder: \"Enter Petal Length\",\n                value: state.petalLength,\n                onChange: onChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Petal Width\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                style: {\n                  width: \"100%\",\n                  padding: \"12px 20px\",\n                  margin: \"8px 0\",\n                  display: \"inline-block\",\n                  border: \"1px solid #ccc\",\n                  borderRadius: \"4px\"\n                },\n                type: \"number\",\n                step: \".1\",\n                name: \"petalWidth\",\n                id: \"petalWidth\",\n                placeholder: \"i.e. 3.9\",\n                value: state.petalWidth,\n                onChange: onChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                style: {\n                  width: \"100%\",\n                  padding: \"12px 20px\",\n                  margin: \"8px 0\",\n                  display: \"inline-block\",\n                  border: \"1px solid #ccc\",\n                  borderRadius: \"4px\",\n                  boxSizing: \"border-box\"\n                },\n                type: \"number\",\n                step: \"any\",\n                name: \"epoch\",\n                id: \"epoch\",\n                placeholder: \"Enter Epoch\",\n                value: state.epoch,\n                onChange: onChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                style: {\n                  width: \"100%\",\n                  padding: \"12px 20px\",\n                  margin: \"8px 0\",\n                  display: \"inline-block\",\n                  border: \"1px solid #ccc\",\n                  borderRadius: \"4px\",\n                  boxSizing: \"border-box\"\n                },\n                type: \"number\",\n                step: \".01\",\n                name: \"learningRate\",\n                id: \"learningRate\",\n                placeholder: \"Enter Learning Rate (number from 0 to 1)\",\n                value: state.learningRate,\n                onChange: onChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                border: \"none\",\n                color: \"red\",\n                padding: \"15px 32px\",\n                textAlign: \"center\",\n                textDecoration: \"none\",\n                display: \"inline-block\",\n                fontSize: \"15px\",\n                fontWeight: \"bold\",\n                margin: \"10px\"\n              },\n              variant: \"primary\",\n              type: \"submit\",\n              children: \"Predict\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PredictionForm, \"ArV8rxC+yfmALk6i6BGxMRzAHzA=\");\n\n_c = PredictionForm;\nexport default PredictionForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PredictionForm\");","map":{"version":3,"sources":["c:/Users/timho/Desktop/Centennial College/Winter 2021/COMP 308-006 - Emerging Technologies/Assignments/Assignment 4/TimothyGarcia_JesseGabriel_COMP308_Lab4/react-ui/src/components/DisplayForm.js"],"names":["axios","Spinner","Jumbotron","Container","Form","Button","withRouter","React","useState","PredictionForm","props","state","submitIris","epochNum","learningRate","sepalLength","sepalWidth","petalLength","petalWidth","species","showLoading","setShowLoading","apiUrl","checkGuess","resultData","userGuess","val1","val2","val3","final","Math","max","name","toUpperCase","slice","submitForm","e","preventDefault","post","then","history","push","pathname","catch","error","onChange","persist","target","value","position","top","bottom","left","right","margin","width","height","padding","display","border","borderRadius","boxSizing","epoch","color","textAlign","textDecoration","fontSize","fontWeight"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\r\nimport Container from \"react-bootstrap/Container\"\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport React, { useState } from \"react\";\r\n\r\nfunction PredictionForm(props){\r\n    const [state, submitIris] = useState({\r\n        epochNum: \"\",\r\n        learningRate: \"\",\r\n        sepalLength: \"\",\r\n        sepalWidth: \"\",\r\n        petalLength: \"\",\r\n        petalWidth: \"\",\r\n        species: \"\"\r\n    });\r\n    const [showLoading, setShowLoading] = useState(false);\r\n    const apiUrl = \"http://localhost:3000/\";\r\n\r\n    // define \r\n    const checkGuess = (resultData, userGuess) => {\r\n        let val1 = resultData[0];\r\n        let val2 = resultData[1];\r\n        let val3 = resultData[2];\r\n        let final = Math.max(val1, Math.max(val2, val3));\r\n        let name = \"\";\r\n\r\n        if (final == val1) {\r\n            name = \"Setosa\";\r\n        } else if (final == val2) {\r\n            name = \"Virginica\";\r\n        } else if (final == val3) {\r\n            name = \"Versicolor\";\r\n        }\r\n\r\n        // return message according to the guess\r\n        if (userGuess.toUpperCase() === name.toUpperCase()) {\r\n            return `Your guess ${name} is same as mine!`;\r\n        } else {\r\n            return (\r\n                `You guessed ${userGuess[0].toUpperCase() + userGuess.slice(1)}` +\r\n                `, but I think it's ${name}. You should study more!`\r\n            );\r\n        }\r\n    }\r\n\r\n    const submitForm = e =>{\r\n        setShowLoading(true);\r\n        e.preventDefault();\r\n        axios\r\n        .post(apiUrl)\r\n        .then(state)\r\n        setShowLoading(false);\r\n        props.history.push({pathname: \"/results\", state})\r\n        .catch(error => setShowLoading(false));\r\n    };\r\n\r\n    const onChange = e => {\r\n        e.persist();\r\n        submitIris({ ...state, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n      <Container>\r\n        <div className=\"text-center\">\r\n          <div\r\n            style={{\r\n              position: \"absolute\",\r\n              top: \"3vw\",\r\n              bottom: \"0\",\r\n              left: \"0\",\r\n              right: \"0\",\r\n              margin: \"auto\",\r\n              width: \"30vw\",\r\n              height: \"auto\",\r\n            }}\r\n          >\r\n            <h1>TEST PARAMETERS FORM</h1>\r\n            {showLoading && (\r\n              <Spinner animation=\"border\" role=\"status\"></Spinner>\r\n            )}\r\n            <Form onSubmit={submitForm}>\r\n              <Form.Group>\r\n                <Form.Control\r\n                  style={{\r\n                    width: \"100%\",\r\n                    padding: \"12px 20px\",\r\n                    margin: \"8px 0\",\r\n                    display: \"inline-block\",\r\n                    border: \"1px solid #ccc\",\r\n                    borderRadius: \"4px\",\r\n                    boxSizing: \"border-box\",\r\n                  }}\r\n                  type=\"number\"\r\n                  step=\".1\"\r\n                  name=\"sepalLength\"\r\n                  id=\"sepalLength\"\r\n                  placeholder=\"Enter Sepal Length\"\r\n                  value={state.sepalLength}\r\n                  onChange={onChange}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n              {/* */}\r\n              <Form.Group>\r\n                <Form.Control\r\n                  style={{\r\n                    width: \"100%\",\r\n                    padding: \"12px 20px\",\r\n                    margin: \"8px 0\",\r\n                    display: \"inline-block\",\r\n                    border: \"1px solid #ccc\",\r\n                    borderRadius: \"4px\",\r\n                    boxSizing: \"border-box\",\r\n                  }}\r\n                  type=\"number\"\r\n                  step=\".1\"\r\n                  name=\"sepalWidth\"\r\n                  id=\"sepalWidth\"\r\n                  placeholder=\"Enter Sepal Width\"\r\n                  value={state.sepalWidth}\r\n                  onChange={onChange}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n              {/* */}\r\n              <Form.Group>\r\n                <Form.Control\r\n                  style={{\r\n                    width: \"100%\",\r\n                    padding: \"12px 20px\",\r\n                    margin: \"8px 0\",\r\n                    display: \"inline-block\",\r\n                    border: \"1px solid #ccc\",\r\n                    borderRadius: \"4px\",\r\n                    boxSizing: \"border-box\",\r\n                  }}\r\n                  type=\"number\"\r\n                  step=\".1\"\r\n                  name=\"petalLength\"\r\n                  id=\"petalLength\"\r\n                  placeholder=\"Enter Petal Length\"\r\n                  value={state.petalLength}\r\n                  onChange={onChange}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n              {/* */}\r\n              <Form.Group>\r\n                  <Form.Label>Petal Width</Form.Label>\r\n                <Form.Control\r\n                  style={{\r\n                    width: \"100%\",\r\n                    padding: \"12px 20px\",\r\n                    margin: \"8px 0\",\r\n                    display: \"inline-block\",\r\n                    border: \"1px solid #ccc\",\r\n                    borderRadius: \"4px\",\r\n                  }}\r\n                  type=\"number\"\r\n                  step=\".1\"\r\n                  name=\"petalWidth\"\r\n                  id=\"petalWidth\"\r\n                  placeholder=\"i.e. 3.9\"\r\n                  value={state.petalWidth}\r\n                  onChange={onChange}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n              {/* */}\r\n              <Form.Group>\r\n                <Form.Control\r\n                  style={{\r\n                    width: \"100%\",\r\n                    padding: \"12px 20px\",\r\n                    margin: \"8px 0\",\r\n                    display: \"inline-block\",\r\n                    border: \"1px solid #ccc\",\r\n                    borderRadius: \"4px\",\r\n                    boxSizing: \"border-box\",\r\n                  }}\r\n                  type=\"number\"\r\n                  step=\"any\"\r\n                  name=\"epoch\"\r\n                  id=\"epoch\"\r\n                  placeholder=\"Enter Epoch\"\r\n                  value={state.epoch}\r\n                  onChange={onChange}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n              {/* */}\r\n              <Form.Group>\r\n                <Form.Control\r\n                  style={{\r\n                    width: \"100%\",\r\n                    padding: \"12px 20px\",\r\n                    margin: \"8px 0\",\r\n                    display: \"inline-block\",\r\n                    border: \"1px solid #ccc\",\r\n                    borderRadius: \"4px\",\r\n                    boxSizing: \"border-box\",\r\n                  }}\r\n                  type=\"number\"\r\n                  step=\".01\"\r\n                  name=\"learningRate\"\r\n                  id=\"learningRate\"\r\n                  placeholder=\"Enter Learning Rate (number from 0 to 1)\"\r\n                  value={state.learningRate}\r\n                  onChange={onChange}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n              <Button\r\n                style={{\r\n                  border: \"none\",\r\n                  color: \"red\",\r\n                  padding: \"15px 32px\",\r\n                  textAlign: \"center\",\r\n                  textDecoration: \"none\",\r\n                  display: \"inline-block\",\r\n                  fontSize: \"15px\",\r\n                  fontWeight: \"bold\",\r\n                  margin: \"10px\",\r\n                }}\r\n                variant=\"primary\"\r\n                type=\"submit\"\r\n              >\r\n                Predict\r\n              </Button>\r\n            </Form>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n      </div>\r\n    );\r\n}\r\nexport default PredictionForm;"]},"metadata":{},"sourceType":"module"}