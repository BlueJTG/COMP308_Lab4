{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jsrg4\\\\Documents\\\\GitHub\\\\COMP308_Lab4\\\\react-ui\\\\src\\\\components\\\\Results.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Spinner from 'react-bootstrap/Spinner';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [data, setData] = useState({});\n  const [showLoading, setShowLoading] = useState(true);\n  const apiUrl = \"http://localhost:3000/run\"; //runs once after the first rendering of page\n\n  useEffect(() => {\n    const fetchData = async () => {\n      axios.get(apiUrl).then(result => {\n        console.log('result.data:', result.data);\n        setData(result.data);\n        setShowLoading(false);\n      }).catch(error => {\n        console.log('error in fetchData:', error);\n      });\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: showLoading === false ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [showLoading && /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          classname: \"sr-only\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Prediction Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \" the values for species will be:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"setosa: 1,0,0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"virginica: 0,1,0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"versicolor: 0,0,1 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"App-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Test 1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Test 2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Test 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"App-td\",\n              children: data.row1.map((value, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n                children: value\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 17\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"App-td\",\n              children: data.row2.map((value, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n                children: value\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"App-td\",\n              children: data.row3.map((value, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n                children: value\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: showLoading && /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sr-only\",\n          children: \"Waiting for results...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"Lz1ug0+UnHfZ/mSBv3Fk4g0s4v0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/jsrg4/Documents/GitHub/COMP308_Lab4/react-ui/src/components/Results.js"],"names":["React","useState","useEffect","axios","Spinner","App","data","setData","showLoading","setShowLoading","apiUrl","fetchData","get","then","result","console","log","catch","error","row1","map","value","index","row2","row3"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport './styles.css';\r\n\r\n\r\nfunction App(){\r\n  const [data, setData] = useState({});\r\n  const [showLoading, setShowLoading] = useState(true);\r\n  const apiUrl = \"http://localhost:3000/run\";\r\n  //runs once after the first rendering of page\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n    axios.get(apiUrl)\r\n    .then(result => {\r\n      console.log('result.data:' , result.data)\r\n      setData(result.data)\r\n      setShowLoading(false)\r\n    }).catch((error) => {\r\n      console.log('error in fetchData:', error)\r\n    });\r\n  };\r\n  fetchData();\r\n}, []);\r\n\r\nreturn(\r\n  <div>\r\n    { showLoading === false\r\n    ? <div>\r\n        {showLoading && <Spinner animation=\"border\" role=\"status\">\r\n          <span classname=\"sr-only\">Loading...</span>\r\n          </Spinner>}\r\n          \r\n          <h1>Prediction Results</h1>\r\n          <h2> the values for species will be:</h2>\r\n          <li>setosa: 1,0,0</li>\r\n          <li>virginica: 0,1,0</li>\r\n          <li>versicolor: 0,0,1 </li>\r\n\r\n          <table className=\"App-table\">\r\n            \r\n          <thead>\r\n            <tr>\r\n              <th>Test 1</th>\r\n              <th>Test 2</th>\r\n              <th>Test 3</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td className=\"App-td\">\r\n                {data.row1.map((value, index) =>(\r\n                <p key={index}>{value}</p>\r\n                ))}\r\n              </td>\r\n              <td className=\"App-td\">\r\n                {data.row2.map((value, index) =>(\r\n                    <p key={index}>{value}</p>\r\n                ))}\r\n              </td>\r\n              <td className=\"App-td\">\r\n                {data.row3.map((value, index) =>(\r\n                    <p key={index}>{value}</p>\r\n                ))}\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n          </table>\r\n          \r\n  </div>\r\n  :\r\n  <div>\r\n    {showLoading && <Spinner animation=\"border\" role=\"status\">\r\n      <span className=\"sr-only\">Waiting for results...</span>\r\n      </Spinner>}\r\n  </div>\r\n  \r\n}\r\n\r\n</div>\r\n\r\n);\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}